{"ast":null,"code":"var _jsxFileName = \"/home/scott/Desktop/lets-play/client/src/components/Chat/MessageList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Message from './Message';\n\nclass MessageList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.listRef = null;\n\n    this.setListRef = ref => {\n      this.listRef = ref;\n    };\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // Are we adding new items to the list?\n    // Capture the scroll position so we can adjust scroll later.\n    if (prevProps.list.length < this.props.list.length) {\n      return this.listRef.scrollHeight - this.listRef.scrollTop;\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // If we have a snapshot value, we've just added new items.\n    // Adjust scroll so these new items don't push the old ones out of view.\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    if (snapshot !== null) {\n      this.listRef.scrollTop = this.listRef.scrollHeight - snapshot;\n    }\n  }\n\n  render() {\n    if (!this.props.roomId) {\n      return React.createElement(\"div\", {\n        className: \"message-list col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"join-room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\u2190 Your Journey Awaits...\"));\n    }\n\n    return React.createElement(\"div\", {\n      ref: this.setListRef,\n      className: \"message-list col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.messages.map((message, index) => {\n      return React.createElement(Message, {\n        key: message.id,\n        username: message.senderId,\n        text: message.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default MessageList;","map":{"version":3,"sources":["/home/scott/Desktop/lets-play/client/src/components/Chat/MessageList.js"],"names":["React","ReactDOM","Message","MessageList","Component","listRef","setListRef","ref","getSnapshotBeforeUpdate","prevProps","prevState","list","length","props","scrollHeight","scrollTop","componentDidUpdate","snapshot","render","roomId","messages","map","message","index","id","senderId","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,OADsC,GAC5B,IAD4B;;AAAA,SA4CtCC,UA5CsC,GA4CzBC,GAAG,IAAI;AAChB,WAAKF,OAAL,GAAeE,GAAf;AACD,KA9CmC;AAAA;;AAGtCC,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C;AACA;AACA,QAAID,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,KAAKC,KAAL,CAAWF,IAAX,CAAgBC,MAA5C,EAAoD;AAClD,aACE,KAAKP,OAAL,CAAaS,YAAb,GAA4B,KAAKT,OAAL,CAAaU,SAD3C;AAGD;;AACD,WAAO,IAAP;AACD;;AAELC,EAAAA,kBAAkB,CAACP,SAAD,EAAYC,SAAZ,EAAuBO,QAAvB,EAAiC;AACjD;AACA;AACA;AACA,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB,WAAKZ,OAAL,CAAaU,SAAb,GACA,KAAKV,OAAL,CAAaS,YAAb,GAA4BG,QAD5B;AAEH;AACF;;AAECC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACpB,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,CADJ;AAOH;;AACD,WACI;AAAK,MAAA,GAAG,EAAE,KAAKb,UAAf;AAA2B,MAAA,SAAS,EAAC,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKO,KAAL,CAAWO,QAAX,CAAoBC,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,aACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAED,OAAO,CAACE,EAAtB;AAA0B,QAAA,QAAQ,EAAEF,OAAO,CAACG,QAA5C;AAAsD,QAAA,IAAI,EAAEH,OAAO,CAACI,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJA,CADL,CADJ;AASH;;AA3CqC;;AAiD1C,eAAevB,WAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Message from './Message'\n\nclass MessageList extends React.Component {\n    listRef = null;\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        // Are we adding new items to the list?\n        // Capture the scroll position so we can adjust scroll later.\n        if (prevProps.list.length < this.props.list.length) {\n          return (\n            this.listRef.scrollHeight - this.listRef.scrollTop\n          );\n        }\n        return null;\n      }\n    \n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // If we have a snapshot value, we've just added new items.\n    // Adjust scroll so these new items don't push the old ones out of view.\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    if (snapshot !== null) {\n        this.listRef.scrollTop =\n        this.listRef.scrollHeight - snapshot;\n    }\n  }\n    \n    render() {\n        if (!this.props.roomId) {\n            return (\n                <div className=\"message-list col-8\">\n                    <div className=\"join-room\">\n                        &larr; Your Journey Awaits...\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div ref={this.setListRef} className=\"message-list col-8\">\n                {this.props.messages.map((message, index) => {\n                    return (\n                        <Message key={message.id} username={message.senderId} text={message.text} />\n                    )\n                })}\n            </div>\n        )\n    }\n    setListRef = ref => {\n        this.listRef = ref;\n      };\n}\n\nexport default MessageList"]},"metadata":{},"sourceType":"module"}